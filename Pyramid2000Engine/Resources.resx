<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Item_Description_Beanstalk" xml:space="preserve">
    <value>THERE IS A TWELVE FOOT BEAN STALK STRETCHING UP OUT OF THE PIT, BELLOWING "WATER... WATER..."</value>
  </data>
  <data name="Item_Description_Brass_Lantern" xml:space="preserve">
    <value>BRASS LANTERN</value>
  </data>
  <data name="Item_Description_Food" xml:space="preserve">
    <value>TASTY FOOD</value>
  </data>
  <data name="Item_Description_Food_Here" xml:space="preserve">
    <value>THERE IS FOOD HERE.</value>
  </data>
  <data name="Item_Description_Gigantic_Beanstalk" xml:space="preserve">
    <value>THERE IS A GIGANTIC BEAN STALK STRETCHING ALL THE WAY UP TO THE HOLE.</value>
  </data>
  <data name="Item_Description_Shining_Lamp" xml:space="preserve">
    <value>THERE IS A LAMP SHINING NEARBY.</value>
  </data>
  <data name="Item_Description_Shiny_Lamp" xml:space="preserve">
    <value>THERE IS A SHINY BRASS LAMP NEARBY.</value>
  </data>
  <data name="Item_Description_Stone_Bridge" xml:space="preserve">
    <value>A STONE BRIDGE NOW SPANS THE BOTTOMLESS PIT.</value>
  </data>
  <data name="Item_Description_Tiny_Plant" xml:space="preserve">
    <value>THERE IS A TINY PLANT IN THE PIT, MURMURING "WATER, WATER, ..."</value>
  </data>
  <data name="Item_Description_Vending_Machine" xml:space="preserve">
    <value>THERE IS A MASSIVE VENDING MACHINE HERE. THE INSTRUCTIONS ON IT READ "DROP COINS HERE TO RECEIVE FRESH BATTERIES".</value>
  </data>
  <data name="Item_Description_Water" xml:space="preserve">
    <value>WATER IN THE BOTTLE</value>
  </data>
  <data name="Item_Description_Water_In_Bottle" xml:space="preserve">
    <value>THERE IS WATER IN THE BOTTLE.</value>
  </data>
  <data name="Item_Descrption_Serpent" xml:space="preserve">
    <value>A HUGE GREEN FIERCE SERPENT BARS THE WAY!</value>
  </data>
  <data name="Message_Already_Carrying" xml:space="preserve">
    <value>YOU ARE ALREADY CARRYING IT.</value>
  </data>
  <data name="Message_Cant_Carry_Anymore" xml:space="preserve">
    <value> YOU CAN'T CARRY ANYTHING MORE. YOU'LL HAVE TO DROP SOMETHING FIRST.</value>
  </data>
  <data name="Message_Cant_Go_Back" xml:space="preserve">
    <value>SORRY, BUT I NO LONGER SEEM TO REMEMBER HOW IT WAS YOU GOT HERE.</value>
  </data>
  <data name="Message_Cant_Go_In_Or_Out" xml:space="preserve">
    <value>I DON'T KNOW IN FROM OUT HERE. USE COMPASS POINTS.</value>
  </data>
  <data name="Message_Cant_Go_Left_Or_Right" xml:space="preserve">
    <value>I AM UNSURE HOW YOU ARE FACING. USE COMPASS POINTS.</value>
  </data>
  <data name="Message_Cant_Go_That_Way" xml:space="preserve">
    <value>THERE IS NO WAY FOR YOU TO GO THAT DIRECTION.</value>
  </data>
  <data name="Message_Inapplicable_Word" xml:space="preserve">
    <value>I DON'T KNOW HOW TO APPLY THAT WORD HERE.</value>
  </data>
  <data name="Message_Nothing_Happens" xml:space="preserve">
    <value>NOTHING HAPPENS.</value>
  </data>
  <data name="Message_Not_Carrying_Anything" xml:space="preserve">
    <value>YOU'RE NOT CARRYING ANYTHING.</value>
  </data>
  <data name="Message_Not_Carrying_It" xml:space="preserve">
    <value>YOU AREN'T CARRYING IT.</value>
  </data>
  <data name="Message_Not_Here" xml:space="preserve">
    <value>I SEE NO {0} HERE.</value>
  </data>
  <data name="Message_OK" xml:space="preserve">
    <value> OK</value>
  </data>
  <data name="Message_Plant_Has_Deep_Roots" xml:space="preserve">
    <value>THE PLANT HAS EXCEPTIONALLY DEEP ROOTS AND CANNOT BE PULLED FREE</value>
  </data>
  <data name="Message_Prompt" xml:space="preserve">
    <value>: </value>
  </data>
  <data name="Message_Score" xml:space="preserve">
    <value>YOU HAVE SCORED {0} OUT OF 220.</value>
  </data>
  <data name="Message_Turns_Used" xml:space="preserve">
    <value>USING {0} TURNS.</value>
  </data>
  <data name="Message_Welcome" xml:space="preserve">
    <value>WELCOME TO PYRAMID 2000!!</value>
  </data>
  <data name="Room_Description_In_The_Desert" xml:space="preserve">
    <value>YOU ARE IN THE DESERT.</value>
  </data>
  <data name="Room_Description_Outside_Pyramid" xml:space="preserve">
    <value>YOU ARE STANDING BEFORE THE ENTRANCE OF A PYRAMID. AROUND YOU IS A DESERT.</value>
  </data>
  <data name="Room_Description_Pyramid_Entrance" xml:space="preserve">
    <value>YOU ARE STANDING IN THE ENTRANCE OF THE PYRAMID. A HOLE IN THE FLOOR LEADS TO A PASSAGE BENEATH THE SURFACE.</value>
  </data>
  <data name="Room_Description_Small_Chamber" xml:space="preserve">
    <value>YOU ARE IN A SMALL CHAMBER BENEATH A HOLE FROM THE SURFACE. A LOW CRAWL LEADS INWARDS TO THE WEST. HIEROGLYPHICS ON THE WALL TRANSLATE, "CURSE ALL WHO ENTER THIS SACRED CRYPT."</value>
  </data>
</root>